[BASE_SETTINGS]
modelling_which_disease = Hypertension_I10
how_many_months_model   = 12
model_type              = 0 # 0: Only classification model, 1: Only Survival Model, 2: Both classification and survival models 
save_model              = True
save_timeplot           = True
verbose                 = 3 # Possible Values: 0, 1, 2, 3+ with increasing number printing increasing details
balancing_required      = True # Boolean to undersample normal dataset only
validation_set_required = False
classification_from_survival_req = True # If training survival models. Boolean
duration_col_upper_bound= 20
pretrained = False
test_size = 0.0

[FEATURES_IMPUTATION]
imputation_required = True # If training XGBoost and LightGBM. If False and any other model is tried to be trained, a warning will be printed. Boolean
impute_non_lab_null_with = 0 # If imputation_required=True, fill all null values not in lab_ranges.keys() with this value. Expects an int or float.
specific_imputations= {} # example case, {'bmi': 15} define the value which you want to impute instead of 0


[SPLITS_SAVE_CONFIG]
additional_clmns_needed = ['Practice', 'PatientID']

[FILE_SETTINGS]
# Only strings should be given, if no prefix needed, leave it empty.
prefix_to_experiment_path = _final_12month_
dataset_filepath   = ./data
diagnosed_filename = diagnosed_train
normal_filename    = normal_train

# For doing hyperparameter tuning etc. 
model_filepath     = None
model_filename     = None

[COLUMN_NAMES]
ref_date_clmn         = ref_date
diagnosis_date_clmn   = diagnosis_date
thresh_date_clmn      = threshold_date
latest_encounter_clmn = latest_encounter
time_column_name      = time_in_days

[EXCLUSION]
; exclude_columns =  ['threshold_date', 'diagnosis_date', 'date_of_birth', 'date_of_death', 'ref_date',
;                     'Practice', 'PatientID', 'vitals_id', 'weight_category', 'duration_of_disease',
;                     'age', 'ethnicity_mapping', 'bmi', 'bsa', 'mean_arterial_pressure',
;                     'systolic', 'diastolic', 'respiration', 'temperature', 'weight',
;                     'height', 'pulse', 'race', 'ige','total_cholesterol','fast_plasma_glucose','glomerular_filtration_rate',
; 	                'total_rbc', 'total_wbc', 'hematocrit', 'platelet', 'hemoglobin', 'respiration_group',
;                     'TUMOR', 'ANEMDEF', 'E66']

exclude_columns = ['threshold_date', 'diagnosis_date', 'date_of_birth', 'date_of_death', 'ref_date',
                    'Practice', 'PatientID', 'vitals_id', 'duration_of_disease',
                    'age','weight','height','bmi','bmi_group','bsa','bsa_group','diastolic','systolic','mean_arterial_pressure','pulse','respiration','temperature','race','E66']



[NULL_COLUMNS]
null_col_to_drop = ['gender', 'weight_group', 'age', 'height', 'weight', 'age_group', 'bmi', 'bsa',
                    'systolic', 'diastolic', 'mean_arterial_pressure', 'bmi_group', 'map_group','bsa_group', 'respiration_group'
                    ] # These are the columns for which null rows will be dropped only if they are in shortlisted features.

[MAPPING]
; mappings = None ; If no mapping to be done None should be given. Else, write in this format: {'feature_1': {'value_1':0, 'value_2':1, ..}, 'feature_2': {'value_1':0, 'value_2':1, ..}2'} e.g.: { 'alcohol_usage_type': {'Never':0,'Former'  :1, 'Current':2, 'Abuse'   :3},
mappings = None

[FEATURE_RANGES]

lab_ranges =   {'total_rbc' : (3.8, 5.8),
                'total_wbc' : (3.4, 10.8),
                'hematocrit': (34, 50),
                'platelet'  : (130, 450),
                'hemoglobin': (11, 18)}
                ; 'total_cholesterol': (200,240)
                ; 'fast_plasma_glucose': (70,125) ,
                ; 'glomelular_filtration_rate': (15, 90)}

non_lab_ranges =   {'age': (18, 120),
                    'height': (150, 230),  # Average height for newborn is 45 cm (1.5 feet) and 230 cm (7.5 feet) is considered the upper limit.
                    'weight': (35, 300), # For  newborns lowest (3rd percentile; cdn.who.int) is 2.5 kg.
                    'diastolic': (40, 120),
                    'systolic': (70, 220),
                    'age_group': (1,6),
                    'map_group': (1,5),
                    'bmi_group':(1,4),
                    'mean_arterial_pressure': (50, 154)
                    } # Mean arterial pressure range calculated from: (diastolic*2 + systolic)/3. Min-Max ranges from above systolic, diastolic is used for calculating this.
time_in_days_range = [30, 2000]

[SHORTLISTED_FEATURES]
; shortlisted_features = None
; shortlisted_features =['age_group', 'bmi_group', 'map_group', 'race_mapping', 'E55', 'E75', 'E8881', 'G47', 'I10', 'I25', 'J42', 'M10', 'M79', 'N3943', 'N3944', 'N39490', 'N41', 'R000', 'R09', 'R10', 'R31', 'R33', 'R35', 'R3911', 'R3914', 'R3916', 'R53', 'R861', 'Z87440', 'corticosteroids', 'ALCOHOL', 'family_hyperplasia','N52','E84','E78','E11']
; shortlisted_features =['age_group', 'bmi_group', 'map_group', 'race_mapping', 'E55', 'E75', 'E8881', 'G47', 'I10', 'I25', 'J42', 'M10', 'N3943', 'N3944', 'N39490', 'N41', 'R000', 'R09', 'R10', 'R31', 'R33', 'R35', 'R3911', 'R3914', 'R3916', 'R53', 'R861', 'Z87440', 'corticosteroids', 'family_hyperplasia','N52','E84','E78','E11']
; shortlisted_features = ['age_group', 'map_group', 'bmi_group', 'gender', 'E78','E11',
;                         'I25', 'nsaids', 'race_mapping', 'family_hypertension',
;                         'R73', 'family_E11',  'G89', 'atypical_antipsychotics',
;                         'F41', 'K29', 'R06', 'J20', 'R07',  'osteoarthritis',
;                         'rheumatoid_arthritis', 'E88810', 'thyroid_gland_disorders',
;                         'cisplatin', 'gerd', 'K30', 'L40', 'H40', 'N39490', 'sleep_disorder',
;                         'serotonin_norepinephrine_reuptake_inhibitors', 'family_heart', 'chronic_lung_disease']

shortlisted_features = ['age_group', 'map_group', 'bmi_group', 'gender', 'E78','E11',
                        'I25', 'race_mapping', 'family_hypertension',
                        'R73', 'family_E11',  'G89', 'atypical_antipsychotics',
                        'F41', 'K29', 'R06', 'J20', 'R07',  'osteoarthritis',
                        'rheumatoid_arthritis', 'E88810', 'thyroid_gland_disorders',
                        'cisplatin', 'gerd', 'K30', 'L40', 'H40', 'N39490', 'sleep_disorder',
                        'serotonin_norepinephrine_reuptake_inhibitors', 'family_heart', 'chronic_lung_disease','allergic_rhinitis','smoking_status']

# shortlisted_fetures can be given either None or a list
# if none is given, all features except features in exclude_columns are used.
[FEATUREGROUPS]
grouping_required = True #if you want to group them True else False
features_to_group = {'chronic_lung_disease': {'category': 'diagnosis', 'features': ['J41', 'J42', 'J43', 'J44', 'J45']}}
;If false then it should not be in shortlisted features 
[SURVIVAL_PARAMS]
prob_step_size = 0.01 # Step size at which probability needs to be checked from survival model for classification
prob_thresh_classification = 0.5

